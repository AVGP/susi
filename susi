#!/usr/bin/env node

var fs = require('fs'),
    md = require('marked');

var args = process.argv.slice(2);

function stripExtension(fileName) {
  return fileName.substr(0, fileName.lastIndexOf('.'))
}

function renderToHtml(inputFilePath, outputFilePath, layoutHTML) {
  fs.readFile(inputFilePath, 'utf8', function(fileErr, content) {
    var titleCommentMatches = content.match(/^<!-- (.*) -->\n/),
        title               = '';
    if(titleCommentMatches) {
      title   = titleCommentMatches[1];
      content = content.replace(/^<!-- (.*) -->\n/, '');
    }

    layoutHTML = layoutHTML.replace('{{TITLE}}', title);

    var parsedContent = layoutHTML.replace('{{CONTENT}}', md(content));
    fs.writeFile(outputFilePath, parsedContent, 'utf8');
  });
}

function convertFilesInPath(inputPath, outputPath, layoutPath) {
  var layoutHTML = '{{CONTENT}}';
  if(layoutPath) {
    layoutHTML = fs.readFileSync(layoutPath, 'utf8');
  }
  
  fs.readdir(inputPath, function(pathErr, files) {
    files.forEach(function(file) {
      if(fs.lstatSync(inputPath + '/' + file).isDirectory()) {
        convertFilesInPath(inputPath + '/' + file, outputPath + '/' + file, layoutPath); 
        return;
      } else if(file.substr(-2) != 'md') return;

      if(!fs.existsSync(outputPath)) { 
        fs.mkdirSync(outputPath);
      }

      renderToHtml(inputPath + '/' + file, outputPath + '/' + stripExtension(file) + '.html', layoutHTML);
    });
  });
}

convertFilesInPath(args[0], args[1], args[2]);